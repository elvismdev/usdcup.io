# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    twitter_api_key: '%env(TWITTER_API_KEY)%'
    twitter_api_key_secret: '%env(TWITTER_API_KEY_SECRET)%'
    twitter_access_token: '%env(TWITTER_ACCESS_TOKEN)%'
    twitter_access_token_secret: '%env(TWITTER_ACCESS_TOKEN_SECRET)%'
    locale: 'es'
    user_agent: 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36'
    search_page_url: 'https://www.revolico.com/compra-venta/divisas/search.html'
    ad_platform_graphql_endpoint: 'https://api.revolico.app/graphql/'
    search_text: 'usd'
    min_price: 0
    max_price: 100
    platform_name: 'USDCUP.io'
    gh_repo_url: 'https://github.com/elvismdev/usdcup.io'
    banned_words:
        - cambio
        - compro
        - compró
        - conpro
        - comprando
        - comprar
        - busco
        - euro
        - euros
        - peso
        - pesos
        - mexicanos
        - canadiense
        - canadienses
        - envia
        - envía
        - enviamos
        - envio
        - envío
        - necesito
        - nesecita
        - nesecito
        - libra
        - esterlina
        - entrego
        - entrega
        - doy
        - remesa
        - remesas
        - transfiero
        - transferencia
        - credito
        - depósito
        - deposito
        - pago
        - recargo
        - recargamos
        - mlc
    twitter_profile_link: 'https://twitter.com/usdcup'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
